scale_y_continuous() +
#facet_grid(PCLASS~SURVIVED) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AGE)), y=as.numeric(as.character(FARE)), color=SEX),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Titanic') +
labs(x="SURVIVED", y=paste("FARE")) +
layer(data=df,
mapping=aes(x=SEX, y=as.numeric(as.character(FARE)), color=SEX),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic where sex is not null"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_by2578', PASS='orcl_by2578', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_grid(PCLASS~SURVIVED) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AGE)), y=as.numeric(as.character(FARE)), color=SEX),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_by2578', PASS='orcl_by2578', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
#facet_grid(PCLASS~SURVIVED) +
source('C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/05 Data Wrangling/Data Wrangling.R')
select(diamonds, cut, clarity)
View(diamonds)
tbl_df(diamonds)
select(diamonds, cut, clarity)
select(diamonds, cut, clarity) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds;
tbl_df
diamonds %>% select(cut, clarity) %>% tbl_df
diamonds %>% select(color:price) %>% tbl_df
diamonds %>% select(-cut, -clarity) %>% tbl_df
x <- diamonds %>% select(cut, clarity) %>% tbl_df
x
# filter
diamonds %>% select(cut, clarity) %>% filter(cut == "Good") %>% view # Equivalent SQL: select cut, clarity from diamonds where cut = 'Good';
diamonds %>% select(cut, clarity) %>% filter(cut == "Good") %>% VIEW
# filter
diamonds %>% select(cut, clarity) %>% filter(cut == "Good") %>% VIEW(.)
diamonds %>% select(cut, clarity) %>% filter(cut == "Good") %>% View(.)
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% arrange(desc(x)) %>% tbl_df
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% arrange(desc(x), y) %>% tbl_df
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% arrange(desc(x), desc(y)) %>% tbl_df
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5))
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% arrange(desc(x)) %>% tbl_df
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(sum = x+y+z) %>% tbl_df
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(sum = x+y+z) %>% arrange(desc(sum)) %>%tbl_df
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(cumin = x+y+z) %>% arrange(desc(sum)) %>%tbl_df
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(cummin = x+y+z) %>% arrange(desc(sum)) %>%tbl_df
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(cummin = x) %>% arrange(desc(sum)) %>%tbl_df
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(cummin = x) %>% arrange(desc(sum)) %>%tbl_df
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(cummin(x)) %>% arrange(desc(sum)) %>%tbl_df
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(cummin(x)) %>%tbl_df
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(cummin(y,x)) %>%tbl_df
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(cummin(x)) %>%tbl_df
pmin(1:5, 5:1) # Pairwise min
diamonds %>% mutate(minxy = pmin(x,y)) %>% tbl_df
pmax(1:5, 5:1) # Pairwise max
c(1,1,2,0,4,3,5) %>% cummin()
diamonds %>% mutate(cummin_x = cummin(x)) %>% tbl_df
c(1,1,2,5,4,3,5) %>% cummax()
c(2,4,2,5)
c(1,1,2,3,4,3,5) %>% between(2,4)
diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent <= .20 | price_percent >= .80) %>% ggplot(aes(x = price, y = carat, color = cut)) + geom_point()
c(1,1,2,5,4,3,5) %>% cume_dist()
c(1:5) %>% cummean()
c(1:5) %>% lead()
c(1:5) %>% lag()
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(cummin(x)) %>%tbl_df
c(1:10) %>% ntile(4) # bucket edges are rounded
diamonds %>% group_by(cut,color) %>% summarise(n = n()) %>% arrange(n) %>% tbl_df
diamonds %>% group_by(cut,color) %>% summarise(mean = mean(x), sum = sum(x,y,z), n = n())
diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent <= .20 | price_percent >= .80) %>% ggplot(aes(x = price, y = carat, color = cut))
>% arrange(desc(price_percent)) %>% tbl_df
diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent <= .20 | price_percent >= .80) %>% ggplot(aes(x = price, y = carat, color = cut)) + geom_point()
setwd("C:/Users/Brian Yeh/Github/DataVisualization/DV_RProject2")
require(tidyr)
require(dplyr)
require(ggplot2)
setwd("C:/Users/Brian Yeh/Github/DataVisualization/DV_RProject2")
file_path <- "Traffic_violation.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df)
source('C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/R_ETL.R')
source('C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/R_ETL.R')
setwd("C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/CSVs")
source('C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/R_ETL.R')
source('C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/R_ETL.R')
source('C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/R_ETL.R')
require(tidyr)
require(dplyr)
require(ggplot2)
#setwd("C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/CSVs")
setwd("C:/Users/Brian Yeh/Github/DataVisualization/DV_RProject2")
#file_path <- "April16AdvTblCalc.csv"
file_path <- "Traffic_Violation.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Fix date columns, this needs to be done by hand because | needs to be correct.
#                                                        \_/
df$Order_Date <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Order_Date), tz="UTC")))
df$Ship_Date  <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Ship_Date),  tz="UTC")))
source('C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/R_ETL.R')
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
source('C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/R_ETL.R')
require(tidyr)
require(dplyr)
require(ggplot2)
#setwd("C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/CSVs")
setwd("C:/Users/Brian Yeh/Github/DataVisualization/DV_RProject2")
#file_path <- "April16AdvTblCalc.csv"
file_path <- "Traffic_Violation.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
#str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
#measures <- c("Customer_ID", "Order_ID", "Postal_Code", "Row_ID", "Discount", "Gross_Profit_Ratio" , "Number_of_Records", "Order_Quantity", "Product_Base_Margin", "Profit", "Sales", "Shipping_Cost", "Unit_Price")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Fix date columns, this needs to be done by hand because | needs to be correct.
#                                                        \_/
#df$Order_Date <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Order_Date), tz="UTC")))
#df$Ship_Date  <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Ship_Date),  tz="UTC")))
# df["State"] <- data.frame(lapply(df["State"], toupper))
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
source('C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/R_ETL.R')
source("../01 Data/Dataframes_All.R", echo = TRUE)
summary(df)
```
df
source("../01 Data/Dataframes_All.R", echo = TRUE)
summary(df)
```
head(df)
source("../01 Data/Dataframes_All.R", echo = TRUE)
head(df)
source("../01 Data/Dataframes_All.R", echo = TRUE)
head(df)
df.sub <- subset(df, RACE == "WHITE" & GENDER == "M" & Violation_Type == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
head(df)
df.sub <- subset(df, RACE == "WHITE" & GENDER == "M" & Violation_Type == "Citation")
df.sub
PWD
getwd
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
subset(df, RACE == "WHITE" & GENDER == "M" & Violation_Type == "Citation")
source("../01 Data/Dataframes_All.R", echo = TRUE)
df["Race"]
df["Race"]
df.sub <- subset(df, "Race" == "WHITE" & GENDER == "M" & Violation_Type == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df["Race"]
df.sub <- subset(df, "Race" == "WHITE" & "Gender" == "M" & "Violation_Type" == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, "Race" == "WHITE" )
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, Race == "WHITE" )
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, Race == "WHITE" & "Gender" == "M" & "Violation_Type" == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df,"Gender" == "M")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df,Gender == "M")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df,  Violation_Type == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, Race == "WHITE" & Violation_Type == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, Gender == "M" & Race == "WHITE" & Violation_Type == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, Gender == "M" & Race == "WHITE" & Violation_Type == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
summary(df)
```{r echo=FALSE, message=FALSE}
require("jsonlite")
require("RCurl")
require(extrafont)
require("ggplot2")
```
###Summary of dataframe
SQL Query: select * from titanic
```{r echo=FALSE}
source("../01 Data/Dataframes_All.R", echo = TRUE)
summary(df)
```
###Subset of dataframe: White Males with traffic citations
```{r}
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, Gender == "M" & Race == "WHITE" & Violation_Type == "Citation")
source("../01 Data/Dataframes_All.R", echo = TRUE)
source("../01 Data/Dataframes_All.R", echo = TRUE)
source("../01 Data/Dataframes_All.R", echo = TRUE)
summary(df)
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, Gender == "M" & Race == "WHITE" & Violation_Type == "Citation")
df.sub
df.sub <- subset(df, Gender == "M" & Race == "WHITE" & Violation_Type == "Citation")
df.sub <- subset(df, Gender == "M" & Race == "WHITE" & Violation_Type == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, Gender == "M" & Race == "WHITE" & Violation_Type == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, Gender == "M" & Race == "WHITE" & Violation_Type == "Citation")
df.sub
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from traffic_violation"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_by2578', PASS='orcl_by2578', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
View(df)
source("../01 Data/Dataframes_All.R", echo = TRUE)
summary(df)
source("../01 Data/Dataframes_All.R", echo = TRUE)
summary(df)
source("../01 Data/Dataframes_All.R", echo = TRUE)
setwd("C:/Users/Brian Yeh/Github/DataVisualization/DV_RProject2/00 Doc")
source("../01 Data/Dataframes_All.R", echo = TRUE)
source("../01 Data/Dataframes_All.R", echo = TRUE)
summary(df)
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from traffic_violation"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_by2578', PASS='orcl_by2578', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from traffic_violation"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_by2578', PASS='orcl_by2578', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_by2578', PASS='orcl_by2578', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from traffic_violation"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_by2578', PASS='orcl_by2578', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
source("../01 Data/Dataframes_All.R", echo = TRUE)
summary(df)
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, "Gender" == "M" & "Race" == "WHITE" & "Violation_Type" == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, "Violation_Type" == "Citation")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, "Gender" == "M")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, Gender == "M")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, GENDER == "M")
df.sub
source("../01 Data/Dataframes_All.R", echo = TRUE)
df.sub <- subset(df, GENDER == "M" & RACE == "WHITE" & VIOLATION_TYPE == "Citation")
df.sub
source('C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/R_ETL.R')
source('C:/Users/Brian Yeh/Github/DataVisualization/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/R_ETL.R')
source("../01 Data/Dataframes_All.R", echo = TRUE)
setwd("C:/Users/Brian Yeh/Github/DataVisualization/DV_RProject2/00 Doc")
diamonds %>% select(cut, clarity)
source("../01 Data/Dataframes_All.R", echo = TRUE)
df %>% select(YEAR, MODEL)
df
df %>% select(YEAR, MODEL)
df %>% select(year, model)
tbl_df(df)
df %>% select(year, model)
df %>% select(year, Model)
tbl_df(df)
df %>% select(year, Model)
tbl_df(df)
df %>% select(Color, Model)
df %>% select(Year, Model)
df %>% group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% View
df %>% group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% summarise(sum = sum(Violation_Type)) %>% View
df %>% group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% summarise(sum = sum(n)) %>% View
df %>% group_by(Violation_Type, Race) %>% summarise(n = n(), sum = sum(n)) %>% arrange(Violation_Type, n) %>% View
df %>% group_by(Violation_Type, Race) %>% summarise(n = n(), sum =) %>% arrange(Violation_Type, n) %>% summarise(sum = sum(n)) %>% View
df %>% group_by(Violation_Type, Race) %>% summarise(n = n(), sum =) %>% arrange(Violation_Type, n) %>% summarise(sum = sum(n)) %>% View
df %>% group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% summarise(sum = sum(n)) %>% View
df %>% group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n)
df %>%  group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df %>%  group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df %>%  group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df %>%  group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% group_by(Violation_Type)
df %>%  group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% group_by(Violation_Type) %>% mutate(countT = sum(count))
df %>%  group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)
df %>%  group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% group_by(Violation_Type) %>% mutate(countT = sum(count))
df %>%  group_by(Violation_Type, Race) %>% summarise(n = n()) %>% arrange(Violation_Type, n) %>% group_by(Violation_Type) %>% mutate(countT = sum(count))
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, n) %>% group_by(Violation_Type) %>% mutate(countT = sum(count))
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, n) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, n) %>% group_by(Violation_Type)
df %>%  group_by(Violation_Type, Race)
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n())
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, n)
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
source("../01 Data/Dataframes_All.R", echo = TRUE)
df <- df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
%>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df2
df2
df <- df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df2
df2 <- df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df2
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
source("../01 Data/Dataframes_All.R", echo = TRUE)
source("../01 Data/Dataframes_All.R", echo = TRUE)
source("../01 Data/Dataframes_All.R", echo = TRUE)
df2 <- df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df2
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df
View(df)
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df %>%  group_by(Violation_Type, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
View(df)
df %>%  group_by(VIOLATION_TYPE, Race) %>% summarise(count = n()) %>% arrange(Violation_Type, count) %>% group_by(Violation_Type) %>% mutate(countT = sum(count)) %>% group_by(Race, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df2 <- df %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2), '%'))
df2
View(df2)
ggplot(df2, aes(per))
ggplot(df2, aes(per)) + geom_bar()
ggplot(df2, aes(per)) + geom_bar()
ggplot(df2, aes(Race)) + geom_bar()
ggplot(df2, aes(Race)) + geom_bar()
ggplot(df2, aes(RACE)) + geom_bar()
ggplot(df2, aes(RACE, y = per)) + geom_bar()
ggplot(df2, aes(RACE, y = per)) + geom_bar(state = "identity")
ggplot(df2, aes(RACE, y = per)) + geom_bar(stat = "identity")
source("../01 Data/Dataframes_All.R", echo = TRUE)
ggplot(df2, aes(RACE, y = per)) + geom_bar(stat = "identity") + facet_wrap(~ VIOLATION_TYPE)
ggplot(df2, aes(RACE, y = per)) + geom_bar(stat = "identity") + facet_wrap(~ VIOLATION_TYPE) %>% view
ggplot(df2, aes(RACE, y = per, color = RACE)) + geom_bar(stat = "identity") + facet_wrap(~ VIOLATION_TYPE)
ggplot(df2, aes(RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~ VIOLATION_TYPE)
df2 <- df %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2))
ggplot(df2, aes(RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~ VIOLATION_TYPE)
ggplot(df2, aes(RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE)
View(df2)
df2 <- df %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2))
df2 <- df %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2))
df2 <- df %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2))
View(df2)
View(df2)
df2 <- df %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=paste0(round(100*count/countT,2)))
ggplot(df2, aes(RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE)
df2 <- df %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=round(100*count/countT,2))
ggplot(df2, aes(RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE)
df2 <- df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=round(100*count/countT,2))
ggplot(df2, aes(RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE)
ggplot(df2, aes(y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE)
ggplot(df2, aes(x= RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE)
ggplot(df2, aes(x= RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.test.x = element_blank())
ggplot(df2, aes(x= RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank())
ggplot(df2, aes(x= RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=round(100*count/countT,2)) %>%
ggplot(df2, aes(x= RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=round(100*count/countT,2)) %>% ggplot(df2, aes(x= RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=round(100*count/countT,2)) %>% ggplot(., aes(x= RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
ggplot(df, aes(RACE)) + geom_bar()
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(countT = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=round(100*count/countT,2)) %>% ggplot(., aes(x= RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
View(df2)
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(per=round(100*count/totEach,2)) %>% ggplot(., aes(x= RACE, y = per, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>% group_by(SUBAGENCY, RACE) %>% summarise(n = n()) %>% arrange(n) %>% tbl_df
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= RACE, y = percentage_of_total, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= RACE, y = percentage_of_total + "%", color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>%  group_by(VIOLATION_TYPE, RACE) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(RACE, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= RACE, y = percentage_of_total, color = RACE, fill=RACE)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, color = GENDER, fill=GENDER)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), RACE != "U") %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, color = GENDER, fill=GENDER)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), RACE != "U") %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, color = GENDER, fill=GENDER)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), RACE %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, color = GENDER, fill=GENDER)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, color = GENDER, fill=GENDER)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning")) %>% View
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), RACE %in% c("F", "M")) %>% View
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>% View
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, color = GENDER, fill=GENDER)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, color = GENDER, fill=GENDER)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank()) + position_fill()
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, color = GENDER, fill=GENDER)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank()) + position_fill()
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, fill=GENDER)) + geom_bar(stat = "identity", color = GENDER) + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank()) + position_fill()
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, fill=GENDER)) + geom_bar(stat = "identity", color = "white") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank()) + position_fill()
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, fill=GENDER)) + geom_bar(stat = "identity", color = "white") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, color = GENDER, fill=GENDER)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, fill=GENDER)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank()) + position_fill()
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x= GENDER, y = percentage_of_total, fill=GENDER)) + geom_bar(stat = "identity") + facet_wrap(~VIOLATION_TYPE) +theme(axis.text.x = element_blank(), axis.ticks = element_blank())
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2))%>% View
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x=GENDER, Y = percentage_of_total, FILL= GENDER)) + geom_bar()
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x=GENDER, y = percentage_of_total, fill= GENDER)) + geom_bar()
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x=GENDER, y = percentage_of_total)) + geom_bar()
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x=GENDER, y = percentage_of_total)) + geom_bar(stat = "identity")
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x=GENDER, y = percentage_of_total, fill= VIOLATION_TYPE)) + geom_bar(stat = "identity")
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x=VIOLATION_TYPE, y = percentage_of_total, fill= GENDER)) + geom_bar(stat = "identity")
df %>%  filter(VIOLATION_TYPE %in% c("Citation", "Warning"), GENDER %in% c("F", "M")) %>%  group_by(VIOLATION_TYPE, GENDER) %>% summarise(count = n()) %>% arrange(VIOLATION_TYPE, count) %>% group_by(VIOLATION_TYPE) %>% mutate(totEach = sum(count)) %>% group_by(GENDER, add=TRUE) %>% mutate(percentage_of_total=round(100*count/totEach,2)) %>% ggplot(., aes(x=VIOLATION_TYPE, y = percentage_of_total, fill= GENDER)) + geom_bar(stat = "identity")
source("../01 Data/Dataframes_All.R", echo = TRUE)
source("../01 Data/Dataframes_All.R", echo = TRUE)
setwd("C:/Users/Brian Yeh/Github/DataVisualization/DV_RProject2/00 Doc")
source("../01 Data/Dataframes_All.R", echo = TRUE)
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from traffic_violation"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_by2578', PASS='orcl_by2578', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from traffic_violation"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_by2578', PASS='orcl_by2578', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df %>% filter(VIOLATION_TYPE %in% c("Warning"), VEHICLETYPE %in% c("02 - Automobile")) %>% group_by(VEHICLETYPE, SUBAGENCY) %>% summarise(count = n()) %>% arrange(count) %>% ggplot(., aes(x = VEHICLETYPE, y = count, color = SUBAGENCY, fill = SUBAGENCY)) + geom_bar(position = "dodge", stat = "identity") + scale_y_continuous()+ facet_grid(~VehicleType) + theme(text = element_text(size=12), axis.text.x = element_blank())
df %>% filter(VIOLATION_TYPE %in% c("Warning"), VEHICLETYPE %in% c("02 - Automobile")) %>% group_by(VEHICLETYPE, SUBAGENCY) %>% summarise(count = n()) %>% arrange(count) %>% ggplot(., aes(x = VEHICLETYPE, y = count, color = SUBAGENCY, fill = SUBAGENCY)) + geom_bar(position = "dodge", stat = "identity") + scale_y_continuous()+ facet_grid(~VEHICLETYPE) + theme(text = element_text(size=12), axis.text.x = element_blank())
source("../01 Data/Dataframes_All.R", echo = TRUE)
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from traffic_violation"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_by2578', PASS='orcl_by2578', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from traffic_violation"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_by2578', PASS='orcl_by2578', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
